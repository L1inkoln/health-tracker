from datetime import datetime
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import requests
from config import API_URL


def send_main_menu() -> InlineKeyboardMarkup:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é`"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="ü•ó –ü–∏—Ç–∞–Ω–∏–µ", callback_data="category_nutrition"
                )
            ],
            [InlineKeyboardButton(text="üò¥ –°–æ–Ω", callback_data="category_sleep")],
            [InlineKeyboardButton(text="üö∂ –ó–¥–æ—Ä–æ–≤—å–µ", callback_data="category_health")],
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="get_stats")],
        ]
    )


async def register_user(telegram_id: int):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ FastAPI –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
    payload = {
        "telegram_id": telegram_id,
        "start_date": datetime.utcnow().isoformat(),
    }
    try:
        response = requests.post(f"{API_URL}/register/", json=payload)
        if response.status_code == 200:
            return True
        elif response.status_code == 400:
            return "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."
        else:
            return f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}"
    except requests.RequestException as e:
        return f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}"


async def get_statistics(telegram_id: int):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id"""
    try:
        response = requests.get(f"{API_URL}/statistics/{telegram_id}")
        if response.status_code == 200:
            return response.json()
        else:
            return f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}"
    except requests.RequestException as e:
        return f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}"
