"""Change models user and others

Revision ID: 6f39f71db803
Revises: 109fd322ab78
Create Date: 2025-04-04 19:35:49.868751

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6f39f71db803"
down_revision: Union[str, None] = "109fd322ab78"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "health", ["user_id"])
    op.create_foreign_key(
        None, "health", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("health", "date")
    op.alter_column(
        "nutrition",
        "water",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.create_unique_constraint(None, "nutrition", ["user_id"])
    op.create_foreign_key(
        None, "nutrition", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("nutrition", "date")
    op.create_unique_constraint(None, "sleep", ["user_id"])
    op.create_foreign_key(
        None, "sleep", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("sleep", "date")
    op.drop_column("users", "target_water")
    op.drop_column("users", "created_at")
    op.drop_column("users", "target_calories")
    op.drop_column("users", "updated_at")
    op.drop_column("users", "target_sleep")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("target_sleep", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "users",
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column("target_calories", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "users",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "users",
        sa.Column("target_water", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "sleep", sa.Column("date", sa.DATE(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "sleep", type_="foreignkey")
    op.drop_constraint(None, "sleep", type_="unique")
    op.add_column(
        "nutrition", sa.Column("date", sa.DATE(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "nutrition", type_="foreignkey")
    op.drop_constraint(None, "nutrition", type_="unique")
    op.alter_column(
        "nutrition",
        "water",
        existing_type=sa.Integer(),
        type_=sa.DOUBLE_PRECISION(precision=53),
        existing_nullable=False,
    )
    op.add_column(
        "health", sa.Column("date", sa.DATE(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "health", type_="foreignkey")
    op.drop_constraint(None, "health", type_="unique")
    # ### end Alembic commands ###
