"""telegram id add

Revision ID: acc41a100491
Revises: 68ecff2f281d
Create Date: 2025-04-04 20:14:07.336907

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "acc41a100491"
down_revision: Union[str, None] = "68ecff2f281d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "health", sa.Column("user_telegram_id", sa.BigInteger(), nullable=False)
    )
    op.drop_constraint("health_user_id_key", "health", type_="unique")
    op.create_unique_constraint(None, "health", ["user_telegram_id"])
    op.drop_constraint("health_user_id_fkey", "health", type_="foreignkey")
    op.create_foreign_key(
        None,
        "health",
        "users",
        ["user_telegram_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_column("health", "user_id")
    op.add_column(
        "nutrition", sa.Column("user_telegram_id", sa.BigInteger(), nullable=False)
    )
    op.drop_constraint("nutrition_user_id_key", "nutrition", type_="unique")
    op.create_unique_constraint(None, "nutrition", ["user_telegram_id"])
    op.drop_constraint("nutrition_user_id_fkey", "nutrition", type_="foreignkey")
    op.create_foreign_key(
        None,
        "nutrition",
        "users",
        ["user_telegram_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_column("nutrition", "user_id")
    op.add_column(
        "sleep", sa.Column("user_telegram_id", sa.BigInteger(), nullable=False)
    )
    op.drop_constraint("sleep_user_id_key", "sleep", type_="unique")
    op.create_unique_constraint(None, "sleep", ["user_telegram_id"])
    op.drop_constraint("sleep_user_id_fkey", "sleep", type_="foreignkey")
    op.create_foreign_key(
        None,
        "sleep",
        "users",
        ["user_telegram_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_column("sleep", "user_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "sleep", sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "sleep", type_="foreignkey")
    op.create_foreign_key(
        "sleep_user_id_fkey",
        "sleep",
        "users",
        ["user_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "sleep", type_="unique")
    op.create_unique_constraint("sleep_user_id_key", "sleep", ["user_id"])
    op.drop_column("sleep", "user_telegram_id")
    op.add_column(
        "nutrition",
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "nutrition", type_="foreignkey")
    op.create_foreign_key(
        "nutrition_user_id_fkey",
        "nutrition",
        "users",
        ["user_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "nutrition", type_="unique")
    op.create_unique_constraint("nutrition_user_id_key", "nutrition", ["user_id"])
    op.drop_column("nutrition", "user_telegram_id")
    op.add_column(
        "health", sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "health", type_="foreignkey")
    op.create_foreign_key(
        "health_user_id_fkey",
        "health",
        "users",
        ["user_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "health", type_="unique")
    op.create_unique_constraint("health_user_id_key", "health", ["user_id"])
    op.drop_column("health", "user_telegram_id")
    # ### end Alembic commands ###
